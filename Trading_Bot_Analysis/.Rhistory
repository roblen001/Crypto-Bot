axis.title.y.right = element_text(color = "orange", size=13)
)
# overlaying plot
# Value used to transform the data
coeff <- 1000
# A few constants
other_y_axis_col <- "blue"
priceColor <- "orange"
ggplot(data, aes(x=date)) +
geom_line( aes(y=VIX), size=0.8, color="blue") +
geom_line( aes(y=transactions), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "VIX",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("transactions","/"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# overlaying plot
# Value used to transform the data
coeff <- 1000
# A few constants
other_y_axis_col <- "blue"
priceColor <- "orange"
ggplot(data, aes(x=date)) +
geom_line( aes(y=VIX), size=0.8, color="blue") +
geom_line( aes(y=transactions), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "VIX",
# Add a second axis and specify its features
sec.axis = sec_axis(~./coeff, name=paste(paste(paste("transactions","/"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# overlaying plot
# Value used to transform the data
coeff <- 100
# A few constants
ggplot(data, aes(x=date)) +
geom_line( aes(y=transactions), size=0.8, color="blue") +
geom_line( aes(y=VIX*coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "Transactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("VIX","*"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data), by='date', type='left')
print(blockchain_data)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data), by='date', type='left')
head(blockchain_data)
tail(blockchain_data)
# overlaying plot
# Value used to transform the data
coeff <- 1000
# A few constants
ggplot(data, aes(x=date)) +
geom_line( aes(y=transactions), size=0.8, color="blue") +
geom_line( aes(y=VIX*coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "Transactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("VIX","*"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# overlaying plot
# Value used to transform the data
coeff <- 150
# A few constants
ggplot(data, aes(x=date)) +
geom_line( aes(y=transactions), size=0.8, color="blue") +
geom_line( aes(y=VIX*coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "Transactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("VIX","*"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data), by='date', type='left')
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data), by='date', type='left')
head(blockchain_data)
tail(blockchain_data)
library(imputeTS)
# imputing stock data and btchash rate with the last values
blockchain_data$btchashrate <- na_locf(blockchain_data$btchashrate)
blockchain_data$OIL <- na_locf(blockchain_data$OIL)
blockchain_data$GOLD <- na_locf(blockchain_data$GOLD)
blockchain_data$`s&p500` <- na_locf(blockchain_data$`s&p500`)
blockchain_data$VIX <- na_locf(blockchain_data$VIX)
# tweet count missing values at the start and the end so we will shave off data
blockchain_data <- blockchain_data %>% drop_na(tweet_count)
# shave of start data to remove missing value of searches
blockchain_data <- blockchain_data %>% drop_na(searches)
head(blockchain_data)
# write.csv(blockchain_data,"E:/cryptoanalysis_data.csv", row.names = FALSE)
library(imputeTS)
# imputing stock data and btchash rate with the last values
blockchain_data$btchashrate <- na_locf(blockchain_data$btchashrate)
blockchain_data$OIL <- na_locf(blockchain_data$OIL)
blockchain_data$GOLD <- na_locf(blockchain_data$GOLD)
blockchain_data$`s&p500` <- na_locf(blockchain_data$`s&p500`)
blockchain_data$VIX <- na_locf(blockchain_data$VIX)
# tweet count missing values at the start and the end so we will shave off data
blockchain_data <- blockchain_data %>% drop_na(tweet_count)
# shave of start data to remove missing value of searches
blockchain_data <- blockchain_data %>% drop_na(searches)
head(blockchain_data)
write.csv(blockchain_data,"E:/cryptoanalysis_data.csv", row.names = FALSE)
library(corrplot)
library(lares)
library(readr)
library(tidyverse)
library(hrbrthemes)
data <- read_csv("E:/cryptoanalysis_data.csv")
corr_data <- data %>% select(!date)
corr <- cor(corr_data)
corrplot(corr, method = "circle", order = "hclust")
corr_cross(corr_data,
max_pvalue = 0.05,
top = 15
)
price_corr <- as.data.frame(corr)
price_corr <- price_corr %>% select(price)
price_corr
# overlaying plot
# Value used to transform the data
coeff <- 150
# A few constants
ggplot(data, aes(x=date)) +
geom_line( aes(y=transactions), size=0.8, color="blue") +
geom_line( aes(y=VIX*coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "Transactions",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("VIX","*"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13)
)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvxy_data.csv")
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvyx_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data), by='date', type='left')
head(blockchain_data)
tail(blockchain_data)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvyx_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data, uvyx_data), by='date', type='left')
head(blockchain_data)
tail(blockchain_data)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvyx_data.csv")
uvyx_data
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data, uvyx_data), by='date', type='left')
head(blockchain_data)
tail(blockchain_data)
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvyx_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data, uvyx_data), by='date', type='left')
blockchain_data
# creating the dataset that will undergo the correlation and exploratory data analysis
activeaddresses_data <- read_csv("E:/activeaddresses_data.csv")
averagefee_data <- read_csv("E:/averagefee_data.csv")
blocksize_data <- read_csv("E:/blocksize_data.csv")
btchashrate_data <- read_csv("E:/btchashrate_data.csv")
crudeoil_data <- read_csv("E:/crudeoil_data.csv")
erc20transfers_data <- read_csv("E:/erc20transfers_data.csv")
#
ethburnt_data <- read_csv("E:/ethburnt_data.csv")
ethprice_data <- read_csv("E:/ethprice_data.csv")
gold_data <- read_csv("E:/gold_data.csv")
googletrends_data <- read_csv("E:/googletrends_data.csv")
hasrate_data <- read_csv("E:/hasrate_data.csv")
marketcap_data <- read_csv("E:/marketcap_data.csv")
#
miningdifficulty_data <- read_csv("E:/miningdifficulty_data.csv")
sandp500_data <- read_csv("E:/s&p500_data.csv")
transactionfee_data <- read_csv("E:/transactionfee_data.csv")
transactions_data <- read_csv("E:/transactions_data.csv")
tweet_volume_data <- read_csv("E:/tweet_volume_data.csv")
uniqueadresses_data <- read_csv("E:/uniqueadresses_data.csv")
vix_data <- read_csv("E:/vix_data.csv")
uvyx_data <- read_csv("E:/uvyx_data.csv")
# newssentiment_data <- read_csv("E:/newssentiment_data.csv")
library(plyr)
blockchain_data <-  join_all(list(ethprice_data ,activeaddresses_data,averagefee_data,blocksize_data, btchashrate_data, crudeoil_data, erc20transfers_data, gold_data, googletrends_data, hasrate_data, marketcap_data, miningdifficulty_data, sandp500_data, transactionfee_data, transactions_data, tweet_volume_data, uniqueadresses_data, vix_data, uvyx_data), by='date', type='left')
blockchain_data
library(imputeTS)
# imputing stock data and btchash rate with the last values
blockchain_data$btchashrate <- na_locf(blockchain_data$btchashrate)
blockchain_data$OIL <- na_locf(blockchain_data$OIL)
blockchain_data$GOLD <- na_locf(blockchain_data$GOLD)
blockchain_data$`s&p500` <- na_locf(blockchain_data$`s&p500`)
blockchain_data$VIX <- na_locf(blockchain_data$VIX)
blockchain_data$UVYX <- na_locf(blockchain_data$UVYX)
# tweet count missing values at the start and the end so we will shave off data
blockchain_data <- blockchain_data %>% drop_na(tweet_count)
# shave of start data to remove missing value of searches
blockchain_data <- blockchain_data %>% drop_na(searches)
head(blockchain_data)
write.csv(blockchain_data,"E:/cryptoanalysis_data.csv", row.names = FALSE)
library(corrplot)
library(lares)
library(readr)
library(tidyverse)
library(hrbrthemes)
data <- read_csv("E:/cryptoanalysis_data.csv")
corr_data <- data %>% select(!date)
corr <- cor(corr_data)
corrplot(corr, method = "circle", order = "hclust")
corr_cross(corr_data,
max_pvalue = 0.05,
top = 15
)
price_corr <- as.data.frame(corr)
price_corr <- price_corr %>% select(price)
price_corr
# overlaying plot
ggplot(data, aes(x=date)) +
geom_line( aes(y=UVYX), size=0.8, color="blue") +
geom_line( aes(y=transactions), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "UVYX",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("Transactions","*"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13))
# overlaying plot
coeff <- 100
ggplot(data, aes(x=date)) +
geom_line( aes(y=UVYX), size=0.8, color="blue") +
geom_line( aes(y=transactions/coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "UVYX",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("Transactions",""),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13))
# overlaying plot
coeff <- 150
ggplot(data, aes(x=date)) +
geom_line( aes(y=UVYX), size=0.8, color="blue") +
geom_line( aes(y=transactions/coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "UVYX",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("Transactions",""),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13))
# overlaying plot
coeff <- 200
ggplot(data, aes(x=date)) +
geom_line( aes(y=UVYX), size=0.8, color="blue") +
geom_line( aes(y=transactions/coeff), size=0.8, color="orange") +
scale_y_continuous(
# Features of the first axis
name = "UVYX",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*coeff, name=paste(paste(paste("Transactions","/"),as.character(coeff)),""))
) +
theme_ipsum() +
theme(
axis.title.y = element_text(color = "blue", size=13),
axis.title.y.right = element_text(color = "orange", size=13))
